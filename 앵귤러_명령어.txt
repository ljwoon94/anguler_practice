asd프로젝트 생성
ng new asd

서버 실행
ng serve
 
컴포넌트란?
독립적으로 동작 가능한 UI요소
HTML 템플릿, 스타일과 로직을 결합 (형태표현과 기능 제어)
DOM 과 같은 트리구조로 UI 요소들을 구성
W3C 표준 웹 컴포넌트 기술을 기반으로 함
-html Templates
-html imports
html 템플릿을 임포트해 사용가능
-shadow DOM
dom을 직접 정의해 사용가능
-custom elements
태그 직접 정의해 사용가능

컴포넌트 하나당 파일 하나
컴포넌트에는 2가지가 있다
하나 데코레이터 (엘리먼트, 템플릿, 스타일) 표현하는 계층
둘 실제 컴포넌트 클래스 안에 있는 로직     동작하는 계층

--------간단한 컴포넌트 만들기--------------
import { Component } from "@angular/core";

// 클래스위에 데코레이터 추가
@Component({
    // selector : 이름    태그생성
    selector : 'app-test',
    // template : 태그안에 들어갈 내용
    template:`
    <p>오늘은 첫 세미나 날입니다.</p>
    `
})
export class TestComponent {

}
-----------------------------------------

데코레이터를 만들어도 바로 사용할 수 없다.
app.module.ts 라는 곳에 사용할 컴포넌트를 등록해야한다.

import { AppComponent } from './app.component';
import { TestComponent } from './test.component';

@NgModule({
  declarations: [
    AppComponent,
    // TestComponent 등록
    TestComponent
  ],
  imports: [
    BrowserModule,
    AppRoutingModule
  ],
  providers: [],
  bootstrap: [AppComponent]
})
export class AppModule { }

------------------정리-----------------------------
컴포넌트 만들기 정리
우선 test.component.ts 파일 생성
TestComponent 클래스를 만들고 위에
@Component({}) 데코레이터 추가
데코레이터 안에는 selector, template을 적는다.
selector은 엘리멘트 이름, template엔 내용을 적는다.
그 후에 app.module.ts 라는 곳으로 들어가 사용할 컴포넌트 등록 

--------------------------------------------------
컴포넌트 생성
ng g c sample1 -it -is

g generate c component 파일이름 -it --inline-template --inline -style

app.module.ts 곳에 자동으로 컴포넌트가 등록된다.

인라인을 사용하기 싫으면 디폴트 입력하면 된다.
ng g c sample2
----------------------------------------------------
angular.json 에 apps에 "prefix": "app"을 다른걸로 변경하면
컴포넌트 생성 시 자동으로 생기는 selector 태그이름의 접두사를 바꾸기 가능하다.

------------------------------------------------------

클래스에 name = JeongWoon; 이라고 적어두면 맴버변수에 등록됨
sample2.component.html에 {{name}}이라고 적으면
JeongWoon을 불러오기 가능
--------------------------------------------------------

앵귤러는 데이터와 뷰로 나뉨. 데이터가 바뀌면 뷰는 자동으로 바뀐다.
데이터를 바꾸려면 사용자의 입력이 필요하다. 예외) electron

사용자가 입력함과 동시에 뷰를 바꾸려면 양방향 데이터 바인딩 필요.

---------------------------------------------------------
 error TS7006: Parameter 'event' implicitly has an 'any' type.
 가 나오면 tsconfig.json 에 "compilerOptions" "noImplicitAny": false 추가


 --------------------------------------------------------
 함수 만들기 
 클래스 밑에 함수 선언
 click(e){
    console.log(e);
    this.name = '하하하하';
 }
 html에 넣으면 <button> 을 넣으면함수 실행된다.
  
  (click) 은 자바스크립트의 onclick과 같다
  click()은 함수다.
  ($event) 내장로컬변수
 <button (click)="click($event)">눌러주세요</button>

 -------------------------------------------------------
양방향 데이터 바인딩
// 모델과 뷰가 일치하는 현상
// 입력하자마자 새로고침 할필요 없이 데이터가 바뀜
[(NgModule)] 을 사용하려면
app.module.ts 에 가서 import {FormsModule} from '@angular/forms';
사용

-------------------------------------------------------
컴포넌트 간의 통신(의존관계)
컴포넌트 트리 상에 붙어 있다면 @Input @Output 자식이 쓴다.
붙어있지 않으면?
같은 가지에 잇다면?
같은 가지가 아니라면
-중개자
-서비스

커스텀 엘리먼트에 문자열 넣기

--------------------------------------------------------

버튼에 클릭을 이벤트 넣는게 아니라 커스텀 엘리먼트에 클릭이벤트가 
일어난걸 알아채는거
<app-semple(click)="onClick()"></app-smaple>


----------------------------------------------------------
양방향 데이터 바인딩이란?
자식에 일어나는 일때문에 부모의 데이터도 변함.


----------------------------------------------------
컴포넌트 생명주기

-----------------------------------------------------
제스민 단위테스트 

ng test

ng eject

ng run e2e 엔드 투 엔드 테스트 npm run lint

ng generate

-------------------------------------------------------
dependency injection

-------------------------------------------------------
RouterModule

라우터 설정
RouterModule 추가
Route 셋팅
=>HomeComponent
=>about => AboutComponent

app 모듈에 Router import
ng serve

app.module.ts에 imports: RouterModule 추가

탬플릿에서 a 태그를 추가
href => RouterLink
현재 경로일때,
routerLinkActive 에 class 설정
해당class에 스타일적용

경로 매칭을 정확히 하고 싶을때,
routerLinkActiveOpions 처리
{exact: true}